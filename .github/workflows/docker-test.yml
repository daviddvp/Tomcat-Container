name: Docker Test and Validation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-docker-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3  # Configura Docker Buildx

      - name: Verify Docker Compose
        run: |
          docker compose version  # Comando V2 (sin guion medio)

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile 
          ignore: DL3006,DL3013,DL3015,DL4006,DL3008  # Ignora advertencias espec√≠ficas

      - name: Validate docker-compose.yml
        run: docker compose config -q  # Usa docker compose (V2)

      - name: Create .env file for testing
        run: |
          echo "SSH_USER=test" > .env
          echo "SSH_PASSWORD=testpass" >> .env
          echo "TOMCAT_USER=admin" >> .env
          echo "TOMCAT_PASSWORD=admin" >> .env

      - name: Build Docker image
        run: docker compose build  # Comando V2

      - name: Start services
        run: docker compose up -d  # Comando V2

      - name: Verify container status
        run: |
          echo "Estado del contenedor: $(docker inspect -f '{{.State.Status}}' tomcat)"
          docker inspect -f '{{.State.Health.Status}}' tomcat || echo "Sin healthcheck"

          - name: Test Tomcat HTTP connection
          run: |
            echo "‚è≥ Esperando a que Tomcat est√© disponible en http://localhost:8080/manager/html..."
            for i in {1..15}; do
              STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:8080/manager/html || echo "000")
              echo "Intento $i: c√≥digo HTTP $STATUS"
              if [ "$STATUS" = "200" ]; then
                echo "‚úÖ Tomcat est√° disponible"
                exit 0
              fi
              sleep 5
            done
            
            echo "‚ùå No se pudo conectar con Tomcat despu√©s de varios intentos."
            docker compose logs
            exit 1  

      #- name: Test SSH availability
      #  run: |
      #    nc -z -v -w5 localhost 2222

      - name: Cleanup
        if: always()
        run: docker compose down --volumes --remove-orphans  # Comando V2

      - name: üì• Dump logs on failure
        if: failure()
        run: |
          echo "‚ùå Fallo detectado. Obteniendo logs de contenedores..."
          docker compose logs > docker-logs.txt
          echo "Mostrando √∫ltimas 100 l√≠neas de logs:"
          tail -n 100 docker-logs.txt
          echo "Logs guardados en docker-logs.txt"