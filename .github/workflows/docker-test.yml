name: Docker Test and Validation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-docker-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3  # Configura Docker Buildx

      - name: Verify Docker Compose
        run: |
          docker compose version  # Comando V2 (sin guion medio)

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile 
          ignore: DL3006,DL3013,DL3015,DL4006,DL3008  # Ignora advertencias específicas

      - name: Validate docker-compose.yml
        run: docker compose config -q  # Usa docker compose (V2)

      - name: Create .env file for testing
        run: |
          echo "SSH_USER=test" > .env
          echo "SSH_PASSWORD=testpass" >> .env
          echo "TOMCAT_USER=admin" >> .env
          echo "TOMCAT_PASSWORD=admin" >> .env

      - name: Build Docker image
        run: docker compose build  # Comando V2

      - name: Start services
        run: docker compose up -d  # Comando V2

      - name: Verify container status
        run: |
          echo "Estado del contenedor: $(docker inspect -f '{{.State.Status}}' tomcat_container)"
          docker inspect -f '{{.State.Health.Status}}' tomcat_container  # Si tiene healthcheck
      - name: Test Tomcat HTTP connection
        run: |
          for i in {1..10}; do
            curl --silent http://localhost:8080 && break
            echo "Esperando que Tomcat esté disponible..."
            sleep 5
            done

      - name: Test SSH availability
        run: |
          nc -z -v -w5 localhost 2222

      - name: Cleanup
        if: always()
        run: docker compose down --volumes --remove-orphans  # Comando V2